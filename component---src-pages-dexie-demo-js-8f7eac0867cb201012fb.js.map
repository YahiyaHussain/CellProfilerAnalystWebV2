{"version":3,"sources":["webpack://gatsby-test/./src/pages/DexieDemo.js"],"names":["useStyles","makeStyles","root","display","alignItems","wrapper","position","buttonSuccess","backgroundColor","green","fabProgress","color","top","left","zIndex","buttonProgress","marginTop","marginLeft","React","setFetchButtonEnabled","setTrainButtonEnabled","setEvaluateButtonEnabled","setDownloadButtonEnabled","uploadButtonEnabled","setUploadButtonEnabled","uploading","setUploading","success","setSuccess","setOpenTrainDropdown","setCanvasWebWorker","dataWebWorker","setDataWebWorker","classifierWebWorker","setClassifierWebWorker","dexieWebWorker","setDexieWebWorker","setConfusionMatrix","setTrainingObject","trainingLossCanvasParentRef","constructWebWorker","dataToCanvasWorkerChannel","MessageChannel","dataToClassifierWorkerChannel","postMessage","action","port1","canvasWebWorker","port2","sourcePath","name","worker","Worker","addEventListener","event","console","log","message","classes","buttonClassname","clsx","trainSequencePromise","currentTrainingObject","UUID","updateCanvasesListener","data","uuid","tfvis","current","trainLogs","ticks","loss","accuracy","workerActionPromise","then","trainingObject","removeEventListener","newConfusionMatrix","confusionMatrix","uuidv4","Promise","resolve","selfDestructingEventHandler","handleUpload","eventObject","fileListObject","target","files","getType","getArgs","cellPair","ImageNumber","ObjectNumber","initialTrainingObject","getResult","style","overflowX","height","width","right","className","title","aria-label","component","marginRight","type","hidden","webkitdirectory","mozdirectory","msdirectory","odirectory","directory","multiple","onChange","disabled","size"],"mappings":"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","file":"component---src-pages-dexie-demo-js-8f7eac0867cb201012fb.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Container } from 'reactstrap';\r\nimport { Box, Button, Grid, IconButton, Menu, MenuItem, Card, TextField, Typography } from '@material-ui/core';\r\nimport logo from '../cpa_logo(blue).png';\r\nimport { Image, Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n//import UploadButton from './UploadButton'\r\n\r\nimport Evaluate from './AbbyUIButtons/UIEvaluateButton';\r\nimport ScoreAll from './UIScoreAllButton';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport jones from '../jones.jpg';\r\n\r\nimport { GridContextProvider, GridDropZone, GridItem, swap, move } from 'react-grid-dnd';\r\n\r\nimport '../dndstyles.css';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport * as tfvis from '@tensorflow/tfjs-vis';\r\nimport UploadButton from './UploadButton';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n\twrapper: {\r\n\t\t//margin: theme.spacing(1),\r\n\t\tposition: 'relative',\r\n\t},\r\n\tbuttonSuccess: {\r\n\t\tbackgroundColor: green[500],\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: green[700],\r\n\t\t},\r\n\t},\r\n\tfabProgress: {\r\n\t\tcolor: green[500],\r\n\t\tposition: 'absolute',\r\n\t\ttop: -6,\r\n\t\tleft: -6,\r\n\t\tzIndex: 1,\r\n\t},\r\n\tbuttonProgress: {\r\n\t\tcolor: green[500],\r\n\t\tposition: 'absolute',\r\n\t\ttop: '50%',\r\n\t\tleft: '50%',\r\n\t\tmarginTop: -12,\r\n\t\tmarginLeft: -12,\r\n\t},\r\n}));\r\n\r\nfunction TestUIMVP() {\r\n\t// var classifierManager = null;\r\n\t// const [classifierManager, setClassifierManager] = React.useState(null)\r\n\r\n\tconst [fetchButtonEnabled, setFetchButtonEnabled] = React.useState(false);\r\n\tconst [trainButtonEnabled, setTrainButtonEnabled] = React.useState(false);\r\n\tconst [evaluateButtonEnabled, setEvaluateButtonEnabled] = React.useState(false);\r\n\tconst [downloadButtonEnabled, setDownloadButtonEnabled] = React.useState(false);\r\n\tconst [uploadButtonEnabled, setUploadButtonEnabled] = React.useState(true);\r\n\tconst [uploading, setUploading] = React.useState(false);\r\n\tconst [success, setSuccess] = React.useState(false);\r\n\tconst [openTrainDropdown, setOpenTrainDropdown] = React.useState(false);\r\n\r\n\tconst [canvasWebWorker, setCanvasWebWorker] = React.useState(null);\r\n\tconst [dataWebWorker, setDataWebWorker] = React.useState(null);\r\n\tconst [classifierWebWorker, setClassifierWebWorker] = React.useState(null);\r\n\tconst [dexieWebWorker, setDexieWebWorker] = React.useState(null);\r\n\tconst [confusionMatrix, setConfusionMatrix] = React.useState([\r\n\t\t[0, 0],\r\n\t\t[0, 0],\r\n\t]);\r\n\tconst [trainingObject, setTrainingObject] = React.useState(null);\r\n\r\n\tconst trainingLossCanvasParentRef = React.useRef();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst dexieWebWorker = constructWebWorker('../dexieWorker.js', 'dexieWebWorker');\r\n\t\tsetDexieWebWorker(dexieWebWorker);\r\n\t\tconst dataToCanvasWorkerChannel = new MessageChannel();\r\n\t\tconst dataToClassifierWorkerChannel = new MessageChannel();\r\n\r\n\t\tconst dataWebWorker = constructWebWorker('../dataWorker.js', 'dataWebWorker');\r\n\t\tdataWebWorker.postMessage({ action: 'connectToCanvasWorker' }, [dataToCanvasWorkerChannel.port1]);\r\n\t\tdataWebWorker.postMessage({ action: 'connectToClassifierWorker' }, [dataToClassifierWorkerChannel.port1]);\r\n\t\tsetDataWebWorker(dataWebWorker);\r\n\r\n\t\tconst canvasWebWorker = constructWebWorker('../canvasWorker.js', 'CanvasWebWorker');\r\n\t\tcanvasWebWorker.postMessage({ action: 'connectToDataWorker' }, [dataToCanvasWorkerChannel.port2]);\r\n\t\tsetCanvasWebWorker(canvasWebWorker);\r\n\r\n\t\tconst classifierWebWorker = constructWebWorker('../classifierWorker.js', 'classifierWebWorker');\r\n\t\tclassifierWebWorker.postMessage({ action: 'connectToDataWorker' }, [dataToClassifierWorkerChannel.port2]);\r\n\t\tsetClassifierWebWorker(classifierWebWorker);\r\n\t}, []);\r\n\r\n\tconst constructWebWorker = function (sourcePath, name) {\r\n\t\tconst worker = new Worker(sourcePath);\r\n\t\tworker.addEventListener('error', (event) => {\r\n\t\t\tconsole.log(`[${name}] Error`, event.message, event);\r\n\t\t});\r\n\t\treturn worker;\r\n\t};\r\n\r\n\tconst classes = useStyles();\r\n\tconst buttonClassname = clsx({\r\n\t\t[classes.buttonSuccess]: success,\r\n\t});\r\n\r\n\tconst enableIterationButtons = () => {\r\n\t\tsetFetchButtonEnabled(true);\r\n\t\tsetTrainButtonEnabled(true);\r\n\t\tsetDownloadButtonEnabled(true);\r\n\t\tsetEvaluateButtonEnabled(true);\r\n\t};\r\n\r\n\tconst trainSequencePromise = function (currentTrainingObject) {\r\n\t\tsetOpenTrainDropdown(true);\r\n\t\tvar UUID = null;\r\n\t\tlet updateCanvasesListener = (event) => {\r\n\t\t\tif (UUID == event.data.uuid) {\r\n\t\t\t\tswitch (event.data.action) {\r\n\t\t\t\t\tcase 'updateTrainingCanvases':\r\n\t\t\t\t\t\ttfvis.show.history(trainingLossCanvasParentRef.current, event.data.trainLogs, [\r\n\t\t\t\t\t\t\t...event.data.ticks.loss,\r\n\t\t\t\t\t\t\t...event.data.ticks.accuracy,\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t// tfvis.show.history(\r\n\t\t\t\t\t\t// \ttrainingAccuracyCanvasParentRef.current,\r\n\t\t\t\t\t\t// \tevent.data.trainLogs,\r\n\r\n\t\t\t\t\t\t// );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.log(\"didn't render bad action\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tworkerActionPromise(classifierWebWorker, 'startTrainingGraphsConnection', {})\r\n\t\t\t.then((event) => {\r\n\t\t\t\tUUID = event.data.uuid;\r\n\t\t\t\tclassifierWebWorker.addEventListener('message', updateCanvasesListener);\r\n\t\t\t\treturn workerActionPromise(classifierWebWorker, 'train', { trainingObject: currentTrainingObject });\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tworkerActionPromise(classifierWebWorker, 'endTrainingGraphsConnection', {});\r\n\t\t\t\tclassifierWebWorker.removeEventListener('message', updateCanvasesListener);\r\n\t\t\t\treturn workerActionPromise(classifierWebWorker, 'confusionMatrix');\r\n\t\t\t})\r\n\t\t\t.then((event) => {\r\n\t\t\t\tconst newConfusionMatrix = event.data.confusionMatrix;\r\n\t\t\t\tsetConfusionMatrix(newConfusionMatrix);\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetTrainingObject(currentTrainingObject);\r\n\t\t\t\tsetOpenTrainDropdown(false);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst workerActionPromise = function (worker, action, data) {\r\n\t\tconst UUID = uuidv4();\r\n\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tlet selfDestructingEventHandler = (event) => {\r\n\t\t\t\tif (event.data.uuid === UUID) {\r\n\t\t\t\t\tworker.removeEventListener('message', selfDestructingEventHandler);\r\n\t\t\t\t\tresolve(event);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tworker.addEventListener('message', selfDestructingEventHandler);\r\n\r\n\t\t\tworker.postMessage({ action, ...data, uuid: UUID });\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleUpload = async (eventObject) => {\r\n\t\tconsole.log('Upload!');\r\n\t\tworkerActionPromise(dexieWebWorker, 'init', { fileListObject: eventObject.target.files });\r\n\t\tsetUploading(true);\r\n\t\tworkerActionPromise(dataWebWorker, 'init', { fileListObject: eventObject.target.files })\r\n\t\t\t.then(() => {\r\n\t\t\t\tconsole.log('done');\r\n\t\t\t\tworkerActionPromise(dataWebWorker, 'get', {\r\n\t\t\t\t\tgetType: 'cellPairData',\r\n\t\t\t\t\tgetArgs: { cellPair: { ImageNumber: 1, ObjectNumber: 1 } },\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tconsole.log('next');\r\n\t\t\t\treturn workerActionPromise(dataWebWorker, 'get', { getType: 'trainingObject' });\r\n\t\t\t})\r\n\t\t\t.then((event) => {\r\n\t\t\t\tconst initialTrainingObject = event.data.getResult;\r\n\t\t\t\treturn trainSequencePromise(initialTrainingObject);\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetUploading(false);\r\n\t\t\t\tsetSuccess(true);\r\n\t\t\t\tenableIterationButtons();\r\n\t\t\t\tsetUploadButtonEnabled(false);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={{ overflowX: 'hidden', height: '100%', width: '100%' }}>\r\n\t\t\t<Row style={{ marginTop: '2%' }}>\r\n\t\t\t\t<Col style={{ left: '40%', right: 5 }}>\r\n\t\t\t\t\t<div className={classes.root}>\r\n\t\t\t\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t\t\t\t<Tooltip title=\"Load Data\" aria-label=\"load data\">\r\n\t\t\t\t\t\t\t\t<Fab\r\n\t\t\t\t\t\t\t\t\taria-label=\"save\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tcomponent=\"label\"\r\n\t\t\t\t\t\t\t\t\tclassName={buttonClassname}\r\n\t\t\t\t\t\t\t\t\tstyle={{ marginRight: 5 }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{success ? <CheckIcon /> : <CloudUploadIcon />}\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\t\thidden\r\n\t\t\t\t\t\t\t\t\t\twebkitdirectory=\"true\"\r\n\t\t\t\t\t\t\t\t\t\tmozdirectory=\"true\"\r\n\t\t\t\t\t\t\t\t\t\tmsdirectory=\"true\"\r\n\t\t\t\t\t\t\t\t\t\todirectory=\"true\"\r\n\t\t\t\t\t\t\t\t\t\tdirectory=\"true\"\r\n\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\tonChange={(eventObject) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleUpload(eventObject);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={!uploadButtonEnabled}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Fab>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t{/* size={68}  */}\r\n\t\t\t\t\t\t\t{uploading && <CircularProgress className={classes.fabProgress} size={68} />}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TestUIMVP;\r\n"],"sourceRoot":""}